1) Manually add some perminant environment variables to your os and get those variable values by using one django url
2) add some session environment variables to your os. these can be easily add by using os.environment
     and get those variable values by using one django url, before going to show the detail with template, need to remove from os

3) in an Organization, have four django projects. 80% project settings are same. only 20% project settings are different.
    I want to maintain a one settings file, that can be accessed in to your project. add your own settings to it.

4) read bout commands of pdb console. n, b, c, s, l, l with sart and end line, w, u, q, quit
5) create sample project, one application. write below urls 
    /ram.  add this url in project.urls. write the definition of function in project.urls. return size of the ram of your machine as response
    /os. add this url in project.urls. write the definition of function in application.views. return os name of your machine as response
    /ncores. add this url in project.urls. write the definition of function in application.own_views. return number of cores of your machine as response
    /users. add this url in project.urls. write the definition of function in project.own_views. return some html code as response
6) write a parent class to each model field 
7) write EncryptionField class 
8) write a notes for each field in the django.db.models.fields_all,  default value. default validator
9) define models for your project, write some validators to your model fields, Migrate those models to database.
10) prepare some shell notes, to insert some rows in to database tables. call full_clean method to show the validations.
11) Prepare abstract models for your project

